{"version":3,"file":"static/js/152.4a1d9da4.chunk.js","mappings":"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","sources":["webpack://slim-mom-frontend/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","helpers/validation/loginSchema.js","helpers/validation/registerSchema.js","helpers/validation/calorieSchema.js","helpers/validation/newProductSchema.js","webpack://slim-mom-frontend/./src/components/DailyCaloriesForm/DailyCaloriesForm.module.scss?c79a","components/DailyCaloriesForm/DailyCaloriesForm.jsx","webpack://slim-mom-frontend/./src/pages/MainPage/MainPage.module.scss?b09f","webpack://slim-mom-frontend/./src/components/Modal/Modal.module.scss?b72d","components/Modal/Modal.jsx","pages/MainPage/MainPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Button_container__K9X6Y\",\"button\":\"Button_button__JBBzO\",\"active\":\"Button_active__iTrrO Button_button__JBBzO\",\"primary\":\"Button_primary__9MLUH Button_button__JBBzO\",\"small\":\"Button_small__jToKs\",\"large\":\"Button_large__cizxk\"};","import clsx from 'clsx';\n\nimport styles from './Button.module.scss';\n\nexport const Button = ({\n  size = 'small',\n  mainStyle,\n  type,\n  children,\n  handleClick,\n}) => {\n  return (\n    <button\n      type={type}\n      onClick={handleClick}\n      className={clsx(styles[size], styles[mainStyle])}\n    >\n      {children}\n    </button>\n  );\n};\n","import * as yup from 'yup';\n\nexport const loginSchema = yup.object({\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(6, 'Min number of characters is 6')\n    .required('Password is required'),\n});\n","import * as yup from 'yup';\n\nexport const registerSchema = yup.object({\n  name: yup\n    .string()\n    .min(3, 'Min number of characters is 6')\n    .max(15, 'Max number of characters is 15')\n    .required('Name is required'),\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(6, 'Min number of characters is 6')\n    .required('Password is required'),\n});\n","import * as yup from 'yup';\n\nexport const calorieSchema = yup.object({\n  height: yup.number().min(50).max(250).required(),\n  age: yup.number().min(1).max(100).required(),\n  currentWeight: yup.number().min(5).max(250).required(),\n  desiredWeight: yup.number().min(5).max(250).required(),\n  bloodType: yup.number().required(),\n});\n","import * as yup from 'yup';\n\nexport const newProductSchema = yup.object({\n  date: yup.date().required(),\n  product: yup.string().required(),\n  weight: yup.number().positive().required(),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DailyCaloriesForm_container__z94EE\",\"caloriesForm\":\"DailyCaloriesForm_caloriesForm__CjEzo\",\"form_button\":\"DailyCaloriesForm_form_button__+DDQQ\",\"labelText\":\"DailyCaloriesForm_labelText__G+pBd\",\"labelContainer\":\"DailyCaloriesForm_labelContainer__lo97o\",\"formContainerF\":\"DailyCaloriesForm_formContainerF__z+3qH\",\"formContainerS\":\"DailyCaloriesForm_formContainerS__-eZFl\",\"caloriesFormErrorContainer\":\"DailyCaloriesForm_caloriesFormErrorContainer__BGDXs\",\"caloriesFormError\":\"DailyCaloriesForm_caloriesFormError__h-xJl\",\"radioButtonContainer\":\"DailyCaloriesForm_radioButtonContainer__91ucI\",\"radioButtonList\":\"DailyCaloriesForm_radioButtonList__iE1rE\",\"check\":\"DailyCaloriesForm_check__JP1e-\",\"formContainerMain\":\"DailyCaloriesForm_formContainerMain__+kjzo\",\"formContainerLeft\":\"DailyCaloriesForm_formContainerLeft__kDDqU\",\"formContainerRight\":\"DailyCaloriesForm_formContainerRight__r2vV7\",\"radioButton\":\"DailyCaloriesForm_radioButton__LfytD\"};","// import { DailyCalorieIntake } from 'components/DailyCalorieIntake/DailyCalorieIntake';\n\nimport { Formik, Form, Field } from 'formik';\nimport { PersistFormikValues } from 'formik-persist-values';\n\nimport styles from './DailyCaloriesForm.module.scss';\nimport { calorieSchema } from 'helpers/validation';\nimport { Button } from 'components/Button/Button';\n\nexport const DailyCaloriesForm = () => {\n  const InputField = ({ label, type, value, name, onChange, onBlur }) => (\n    <label>\n      <Field\n        required\n        type={type}\n        value={value}\n        name={name}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      <div className={styles.labelText}>{label}</div>\n    </label>\n  );\n\n  const RadioButton = ({ name, value, id, onChange, onBlur }) => (\n    <li>\n      <Field\n        type=\"radio\"\n        value={value}\n        name={name}\n        id={id}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      <label htmlFor={id}>{value}</label>\n      <div className={styles.check}>\n        <div className={styles.inside}></div>\n      </div>\n    </li>\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          height: '',\n          age: '',\n          weight: '',\n          desiredWeight: '',\n          bloodType: '',\n        }}\n        validateOnBlur\n        validationSchema={calorieSchema}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => (\n          <Form className={styles.caloriesForm} onSubmit={handleSubmit}>\n            <h1>Calculate your daily calorie intake right now</h1>\n            <div className={styles.formContainerMain}>\n              <div className={styles.formContainerLeft}>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Height *\"\n                    type=\"number\"\n                    name={'height'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.height}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.height && errors.height && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.height}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Age *\"\n                    type=\"number\"\n                    name={'age'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.age}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.age && errors.age && (\n                      <p className={styles.caloriesFormError}>{errors.age}</p>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Current weight *\"\n                    type=\"number\"\n                    name={'weight'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.weight}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.weight && errors.weight && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.weight}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className={styles.formContainerRight}>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Desired weight *\"\n                    type=\"number\"\n                    name={'desiredWeight'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.desiredWeight}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.desiredWeight && errors.desiredWeight && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.desiredWeight}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.radioButtonContainer}>\n                  <h3>Blood type *</h3>\n\n                  <ul className={styles.radioButtonList}>\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"1\"\n                      id=\"1-radio-button\"\n                    />\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"2\"\n                      id=\"2-radio-button\"\n                    />\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"3\"\n                      id=\"3-radio-button\"\n                    />\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"4\"\n                      id=\"4-radio-button\"\n                    />\n                  </ul>\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.bloodType && errors.bloodType && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.bloodType}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className={styles.form_button}>\n              <Button\n                size={'large'}\n                mainStyle={'active'}\n                type={'submit'}\n                // handleClick={''}\n              >\n                Start losing weight\n              </Button>\n            </div>\n\n            <PersistFormikValues name=\"calc-form\" ignoreValues=\"bloodType\" />\n          </Form>\n        )}\n      </Formik>\n\n      {/* <DailyCalorieIntake /> */}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MainPage_container__eujA9\",\"mainPage\":\"MainPage_mainPage__6gmrg\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Modal_container__EY5Qx\",\"overlay\":\"Modal_overlay__b+zEz\",\"btnContainer\":\"Modal_btnContainer__kNAnL\",\"modal\":\"Modal_modal__yEgVW\",\"title\":\"Modal_title__KuCmT\",\"modalContainer\":\"Modal_modalContainer__Xtw+V\",\"icon\":\"Modal_icon__jhXbv\",\"closeIcon\":\"Modal_closeIcon__PA6+Y\",\"caloriesContainer\":\"Modal_caloriesContainer__hfkPX\",\"calories\":\"Modal_calories__nbcp9\",\"caloriesText\":\"Modal_caloriesText__ofw+B\",\"secondaryTitle\":\"Modal_secondaryTitle__S7ktB\",\"btn\":\"Modal_btn__eZPu0\",\"list\":\"Modal_list__BMemH\",\"listItem\":\"Modal_listItem__Fa0Gg\",\"btnWrap\":\"Modal_btnWrap__jFJjm\",\"listCenter\":\"Modal_listCenter__Whoij\"};","import scss from './Modal.module.scss';\nimport { Button } from 'components/Button/Button';\nimport { GrClose } from 'react-icons/gr';\nimport { BsArrowReturnLeft } from 'react-icons/bs';\nimport { createPortal } from 'react-dom';\n// import { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useWindowSize } from 'react-use';\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onClose, isModalOpen }) => {\n  const { width } = useWindowSize();\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const onModalClose = event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    };\n    document.body.style.overflow = 'hidden';\n    window.addEventListener('keydown', onModalClose);\n\n    return () => {\n      document.body.style.overflow = 'unset';\n      window.removeEventListener('keydown', onModalClose);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <>\n      <div className={scss.overlay} onClick={handleBackdropClick}>\n        {/* {error && <p> Oops, some error occured... Message: {error}</p>} */}\n        {/* {isLoading === 'pending' ? (\n          <Loader />\n        ) : ( */}\n        <div className={scss.modal}>\n          {width < 768 ? (\n            <div className={scss.btnContainer}>\n              <BsArrowReturnLeft\n                className={scss.icon}\n                onClick={() => onClose()}\n              />\n            </div>\n          ) : (\n            <GrClose className={scss.closeIcon} onClick={() => onClose()} />\n          )}\n\n          <div className={scss.modalContainer}>\n            <h2 className={scss.title}>\n              Your recommended daily calorie intake is\n            </h2>\n            <div className={scss.caloriesContainer}>\n              <span className={scss.calories}>\n                {/* Replace */}\n                2000\n                <span className={scss.caloriesText}> ккал</span>\n              </span>\n            </div>\n            <div className={scss.listCenter}>\n              <h2 className={scss.secondaryTitle}>Foods you should not eat</h2>\n              <ol className={scss.list}>\n                {/* Replace */}\n                <li className={scss.listItem}>Product 1</li>\n                <li className={scss.listItem}>Product 2</li>\n                <li className={scss.listItem}>Product 3</li>\n                <li className={scss.listItem}>Product 4</li>\n                <li className={scss.listItem}>Product 5</li>\n                <li className={scss.listItem}>Product 6</li>\n              </ol>\n            </div>\n          </div>\n          <div className={scss.btnWrap}>\n            <Button size={'large'} mainStyle={'active'} type={'button'}>\n              {/* Replace */}\n              Start losing weight\n            </Button>\n          </div>\n        </div>\n        {/* )} */}\n      </div>\n    </>,\n    modalRoot\n  );\n};\n","import { DailyCaloriesForm } from 'components/DailyCaloriesForm/DailyCaloriesForm';\nimport styles from './MainPage.module.scss';\nimport { useState } from 'react';\nimport { Modal } from 'components/Modal/Modal';\n\nexport const MainPage = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleModalOpen = () => {\n    setIsModalOpen(true);\n  };\n  const onClose = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <>\n      <div className={styles.mainPage}>\n        <DailyCaloriesForm handleModalOpen={handleModalOpen} />\n        {isModalOpen && <Modal onClose={onClose} isModalOpen={isModalOpen} />}\n      </div>\n    </>\n  );\n};\n"],"names":["Button","size","mainStyle","type","children","handleClick","onClick","className","clsx","styles","loginSchema","yup","email","required","password","min","registerSchema","name","max","calorieSchema","height","age","currentWeight","desiredWeight","bloodType","date","product","weight","positive","DailyCaloriesForm","InputField","label","value","onChange","onBlur","RadioButton","id","htmlFor","initialValues","validateOnBlur","validationSchema","values","errors","touched","handleChange","handleBlur","handleSubmit","onSubmit","ignoreValues","modalRoot","document","querySelector","Modal","onClose","width","isModalOpen","useWindowSize","useEffect","onModalClose","event","code","body","style","overflow","window","addEventListener","removeEventListener","createPortal","scss","currentTarget","target","MainPage","useState","setIsModalOpen","handleModalOpen"],"sourceRoot":""}