{"version":3,"file":"static/js/484.5ddb388a.chunk.js","mappings":"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","sources":["webpack://slim-mom-frontend/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","webpack://slim-mom-frontend/./src/components/DailyCaloriesForm/DailyCaloriesForm.module.scss?c79a","helpers/validation/calorieSchema.js","helpers/validation/loginSchema.js","helpers/validation/registerSchema.js","helpers/validation/newProductSchema.js","components/DailyCaloriesForm/DailyCaloriesForm.jsx","webpack://slim-mom-frontend/./src/pages/MainPage/MainPage.module.scss?b09f","pages/MainPage/MainPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Button_container__K9X6Y\",\"button\":\"Button_button__JBBzO\",\"active\":\"Button_active__iTrrO Button_button__JBBzO\",\"primary\":\"Button_primary__9MLUH Button_button__JBBzO\",\"small\":\"Button_small__jToKs\",\"large\":\"Button_large__cizxk\"};","import clsx from 'clsx';\n\nimport styles from './Button.module.scss';\n\nexport const Button = ({\n  size = 'small',\n  mainStyle,\n  type,\n  children,\n  handleClick,\n}) => {\n  return (\n    <button\n      type={type}\n      onClick={handleClick}\n      className={clsx(styles[size], styles[mainStyle])}\n    >\n      {children}\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DailyCaloriesForm_container__z94EE\",\"caloriesForm\":\"DailyCaloriesForm_caloriesForm__CjEzo\",\"form_button\":\"DailyCaloriesForm_form_button__+DDQQ\",\"labelText\":\"DailyCaloriesForm_labelText__G+pBd\",\"labelContainer\":\"DailyCaloriesForm_labelContainer__lo97o\",\"formContainerF\":\"DailyCaloriesForm_formContainerF__z+3qH\",\"formContainerS\":\"DailyCaloriesForm_formContainerS__-eZFl\",\"caloriesFormErrorContainer\":\"DailyCaloriesForm_caloriesFormErrorContainer__BGDXs\",\"caloriesFormError\":\"DailyCaloriesForm_caloriesFormError__h-xJl\",\"radioButtonContainer\":\"DailyCaloriesForm_radioButtonContainer__91ucI\",\"radioButtonList\":\"DailyCaloriesForm_radioButtonList__iE1rE\",\"check\":\"DailyCaloriesForm_check__JP1e-\",\"formContainerMain\":\"DailyCaloriesForm_formContainerMain__+kjzo\",\"formContainerLeft\":\"DailyCaloriesForm_formContainerLeft__kDDqU\",\"formContainerRight\":\"DailyCaloriesForm_formContainerRight__r2vV7\",\"radioButton\":\"DailyCaloriesForm_radioButton__LfytD\"};","import * as yup from 'yup';\n\nexport const calorieSchema = yup.object({\n  height: yup.number().min(50).max(250).required(),\n  age: yup.number().min(1).max(100).required(),\n  currentWeight: yup.number().min(5).max(250).required(),\n  desiredWeight: yup.number().min(5).max(250).required(),\n  bloodType: yup.number().required(),\n});\n","import * as yup from 'yup';\n\nexport const loginSchema = yup.object({\n  email: yup.string().email().required(),\n  password: yup.string().min(6).required(),\n});\n","import * as yup from 'yup';\n\nexport const registerSchema = yup.object({\n  name: yup.string().min(3).max(15).required(),\n  email: yup.string().email().required(),\n  password: yup.string().min(6).required(),\n});\n","import * as yup from 'yup';\n\nexport const newProductSchema = yup.object({\n  date: yup.date().required(),\n  product: yup.string().required(),\n  weight: yup.number().positive().required(),\n});\n","// import { DailyCalorieIntake } from 'components/DailyCalorieIntake/DailyCalorieIntake';\n\nimport { Formik, Form, Field } from 'formik';\nimport { PersistFormikValues } from 'formik-persist-values';\n\nimport styles from './DailyCaloriesForm.module.scss';\nimport { calorieSchema } from 'helpers/validation';\nimport { Button } from 'components/Button/Button';\n\nexport const DailyCaloriesForm = () => {\n  const InputField = ({ label, type, value, name, onChange, onBlur }) => (\n    <label>\n      <Field\n        required\n        type={type}\n        value={value}\n        name={name}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      <div className={styles.labelText}>{label}</div>\n    </label>\n  );\n\n  const RadioButton = ({ name, value, id, onChange, onBlur }) => (\n    <li>\n      <Field\n        type=\"radio\"\n        value={value}\n        name={name}\n        id={id}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      <label htmlFor={id}>{value}</label>\n      <div className={styles.check}>\n        <div className={styles.inside}></div>\n      </div>\n    </li>\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          height: '',\n          age: '',\n          weight: '',\n          desiredWeight: '',\n          bloodType: '',\n        }}\n        validateOnBlur\n        validationSchema={calorieSchema}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => (\n          <Form className={styles.caloriesForm} onSubmit={handleSubmit}>\n            <h1>Calculate your daily calorie intake right now</h1>\n            <div className={styles.formContainerMain}>\n              <div className={styles.formContainerLeft}>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Height *\"\n                    type=\"number\"\n                    name={'height'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.height}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.height && errors.height && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.height}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Age *\"\n                    type=\"number\"\n                    name={'age'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.age}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.age && errors.age && (\n                      <p className={styles.caloriesFormError}>{errors.age}</p>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Current weight *\"\n                    type=\"number\"\n                    name={'weight'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.weight}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.weight && errors.weight && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.weight}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className={styles.formContainerRight}>\n                <div className={styles.labelContainer}>\n                  <InputField\n                    label=\"Desired weight *\"\n                    type=\"number\"\n                    name={'desiredWeight'}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.desiredWeight}\n                  />\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.desiredWeight && errors.desiredWeight && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.desiredWeight}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.radioButtonContainer}>\n                  <h3>Blood type *</h3>\n\n                  <ul className={styles.radioButtonList}>\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"1\"\n                      id=\"1-radio-button\"\n                    />\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"2\"\n                      id=\"2-radio-button\"\n                    />\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"3\"\n                      id=\"3-radio-button\"\n                    />\n                    <RadioButton\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      name=\"bloodType\"\n                      value=\"4\"\n                      id=\"4-radio-button\"\n                    />\n                  </ul>\n                  <div className={styles.caloriesFormErrorContainer}>\n                    {touched.bloodType && errors.bloodType && (\n                      <p className={styles.caloriesFormError}>\n                        {errors.bloodType}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className={styles.form_button}>\n              <Button\n                size={'large'}\n                mainStyle={'active'}\n                type={'submit'}\n                // handleClick={''}\n              >\n                Start losing weight\n              </Button>\n            </div>\n\n            <PersistFormikValues name=\"calc-form\" ignoreValues=\"bloodType\" />\n          </Form>\n        )}\n      </Formik>\n\n      {/* <DailyCalorieIntake /> */}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MainPage_container__eujA9\",\"mainPage\":\"MainPage_mainPage__6gmrg\"};","import { DailyCaloriesForm } from 'components/DailyCaloriesForm/DailyCaloriesForm';\nimport styles from './MainPage.module.scss';\n\nexport const MainPage = () => {\n  return (\n    <>\n      <div className={styles.mainPage}>\n        <DailyCaloriesForm />\n      </div>\n    </>\n  );\n};\n"],"names":["Button","size","mainStyle","type","children","handleClick","onClick","className","clsx","styles","calorieSchema","yup","email","required","password","min","name","max","height","age","currentWeight","desiredWeight","bloodType","date","product","weight","positive","DailyCaloriesForm","InputField","label","value","onChange","onBlur","RadioButton","id","htmlFor","initialValues","validateOnBlur","validationSchema","values","errors","touched","handleChange","handleBlur","handleSubmit","onSubmit","ignoreValues","MainPage"],"sourceRoot":""}