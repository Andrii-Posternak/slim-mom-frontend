{"version":3,"file":"static/js/286.800ba90a.chunk.js","mappings":"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","sources":["webpack://slim-mom-frontend/./src/components/Button/Button.module.scss?f17a","components/Button/Button.jsx","helpers/validation/loginSchema.js","helpers/validation/registerSchema.js","helpers/validation/calorieSchema.js","helpers/validation/newProductSchema.js","webpack://slim-mom-frontend/./src/components/RegistrationForm/RegistrationForm.module.scss?6285","components/RegistrationForm/RegistrationForm.jsx","webpack://slim-mom-frontend/./src/pages/RegistrationPage/RegistrationPage.module.scss?bbbb","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__JBBzO\",\"active\":\"Button_active__iTrrO Button_button__JBBzO\",\"primary\":\"Button_primary__9MLUH Button_button__JBBzO\",\"disable\":\"Button_disable__AF92d Button_button__JBBzO\",\"small\":\"Button_small__jToKs\",\"large\":\"Button_large__cizxk\"};","import clsx from 'clsx';\n\nimport styles from './Button.module.scss';\n\nexport const Button = ({\n  size = 'small',\n  mainStyle,\n  type,\n  disabled = false,\n  children,\n  handleClick,\n}) => {\n  return (\n    <button\n      disabled={disabled}\n      type={type}\n      onClick={handleClick}\n      className={clsx(styles[size], styles[mainStyle])}\n    >\n      {children}\n    </button>\n  );\n};\n","import * as yup from 'yup';\n\nexport const loginSchema = yup.object({\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(6, 'Min number of characters is 6')\n    .required('Password is required'),\n});\n","import * as yup from 'yup';\n\nexport const registerSchema = yup.object({\n  name: yup\n    .string()\n    .min(3, 'Min number of characters is 6')\n    .max(15, 'Max number of characters is 15')\n    .required('Name is required'),\n  email: yup.string().email('Invalid email').required('Email is required'),\n  password: yup\n    .string()\n    .min(6, 'Min number of characters is 6')\n    .required('Password is required'),\n});\n","import * as yup from 'yup';\n\nexport const calorieSchema = yup.object({\n  height: yup.number().min(50).max(250).required(),\n  age: yup.number().min(1).max(100).required(),\n  currentWeight: yup.number().min(5).max(250).required(),\n  desiredWeight: yup.number().min(5).max(250).required(),\n  bloodType: yup.number().required(),\n});\n","import * as yup from 'yup';\n\nexport const newProductSchema = yup.object({\n  productName: yup.string().required(),\n  weight: yup.number().positive().required(),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"RegistrationForm_heading__Y8ZMd\",\"formWrapper\":\"RegistrationForm_formWrapper__5Qa+p\",\"label\":\"RegistrationForm_label__YgknQ\",\"text\":\"RegistrationForm_text__c0gNN\",\"input\":\"RegistrationForm_input__TbLYl\",\"buttonWrapper\":\"RegistrationForm_buttonWrapper__PQk8l\",\"error\":\"RegistrationForm_error__39hF+\"};","import { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport Notiflix from 'notiflix';\nimport { selectIsLoading } from 'redux/auth/authSlice';\nimport { loginUser } from 'redux/auth/authOperations';\nimport { routes } from 'utils/routes';\nimport { registerSchema } from 'helpers/validation';\nimport { registerUserApi } from 'services/authApi';\nimport { Button } from 'components/Button/Button';\nimport { Loader } from 'components/Loader/Loader';\nimport styles from './RegistrationForm.module.scss';\n\nexport const RegistrationForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n\n  const { handleSubmit, errors, handleChange, values, submitCount } = useFormik(\n    {\n      initialValues: {\n        name: '',\n        email: '',\n        password: '',\n      },\n      onSubmit: async (values, { setFieldError }) => {\n        try {\n          await registerUserApi(values);\n          dispatch(\n            loginUser({ email: values.email, password: values.password })\n          );\n          Notiflix.Notify.success('Registration has been successful');\n        } catch (error) {\n          const serverResponse = error.response.data;\n          setFieldError('email', 'Email already exists');\n          Notiflix.Notify.failure(`${serverResponse.message}. Try again`);\n        }\n      },\n      validationSchema: registerSchema,\n    }\n  );\n\n  return (\n    <>\n      <p className={styles.heading}>Register</p>\n      {isLoading && <Loader />}\n      <form onSubmit={handleSubmit} noValidate>\n        <div className={styles.formWrapper}>\n          <label className={styles.label}>\n            <span className={styles.text}>Name</span>\n            <input\n              type=\"text\"\n              name=\"name\"\n              className={styles.input}\n              onChange={handleChange}\n              value={values.name}\n            />\n            {submitCount > 0 && errors.name && (\n              <span className={styles.error}>{errors.name}</span>\n            )}\n          </label>\n          <label className={styles.label}>\n            <span className={styles.text}>Email</span>\n            <input\n              type=\"email\"\n              name=\"email\"\n              className={styles.input}\n              onChange={handleChange}\n              value={values.email}\n            />\n            {submitCount > 0 && errors.email && (\n              <span className={styles.error}>{errors.email}</span>\n            )}\n          </label>\n          <label className={styles.label}>\n            <span className={styles.text}>Password</span>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className={styles.input}\n              onChange={handleChange}\n              value={values.password}\n            />\n            {submitCount > 0 && errors.password && (\n              <span className={styles.error}>{errors.password}</span>\n            )}\n          </label>\n        </div>\n\n        <div className={styles.buttonWrapper}>\n          <Button type=\"submit\" mainStyle=\"active\">\n            Register\n          </Button>\n          <Button\n            type=\"button\"\n            mainStyle=\"primary\"\n            handleClick={e => {\n              e.preventDefault();\n              navigate(routes.login, { replace: true });\n            }}\n          >\n            Log in\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"RegistrationPage_formWrapper__gICyB\",\"registerPage\":\"RegistrationPage_registerPage__pHe4C\"};","import { RegistrationForm } from 'components/RegistrationForm/RegistrationForm';\nimport styles from './RegistrationPage.module.scss';\n\nexport const RegistrationPage = () => {\n  return (\n    <div className={styles.registerPage}>\n      <div className=\"container\">\n        <div className={styles.formWrapper}>\n          <RegistrationForm />\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":["Button","size","mainStyle","type","disabled","children","handleClick","onClick","className","clsx","styles","loginSchema","yup","email","required","password","min","registerSchema","name","max","calorieSchema","height","age","currentWeight","desiredWeight","bloodType","productName","weight","positive","RegistrationForm","navigate","useNavigate","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","useFormik","initialValues","onSubmit","values","setFieldError","registerUserApi","loginUser","Notiflix","serverResponse","response","data","message","validationSchema","handleSubmit","errors","handleChange","submitCount","Loader","noValidate","onChange","value","e","preventDefault","routes","replace","RegistrationPage"],"sourceRoot":""}